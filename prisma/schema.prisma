// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


//whenever we edit this file we have to regenerate the client
generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
  previewFeatures=["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  //@id makes as primary key .default is formatted as uuid, @db.Uuid costumizes even more
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String
  slug String @unique(map: "product_slug_idx")//adding index
  category String
  images String[]
  brand String
  description String
  stock Int
  price Decimal @default(0) @db.Decimal(12,2)//before decimal digits, after decimal digits
  rating Decimal @default(0) @db.Decimal(3,2)
  numReviews Int @default(0)
  isFeatured Boolean @default(false)
  banner String?
  createdAt DateTime @default(now()) @db.Timestamp(6)//@db.Timestamp(6) will add milliseconds to the end of it with six digits

}

model User {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String          @default("NO_NAME")
  email         String          @unique(map: "user_email_idx")
  emailVerified DateTime?       @db.Timestamp(6)
  image         String?
  password      String?
  role          String           @default("user")
  address       Json?              @db.Json
  paymentMethod String?
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt
 account    Account[]
 session    Session[]
 Cart       Cart[] 
}


model Account {
  userId            String  @db.Uuid
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())@db.Timestamp(6)
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @id
  userId       String @db.Uuid
  expires      DateTime @db.Timestamp(6)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
}

model Cart{
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId String? @db.Uuid
  sessionCartId String
  items Json[] @default([]) @db.Json
  itemsPrice Decimal @db.Decimal(12,2)
  totalPrice Decimal @db.Decimal(12,2)
  shippingPrice Decimal @db.Decimal(12,2)
  taxPrice Decimal @db.Decimal(12,2)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  user         User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  

  
}
//whenever we update or modify this file we need to run npx prisma generate
//then run npx prisma migrate dev --name 
